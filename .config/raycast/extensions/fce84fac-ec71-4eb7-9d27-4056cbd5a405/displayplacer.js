var b=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var V=i=>b(i,"__esModule",{value:!0});var J=(i,n)=>{for(var t in n)b(i,t,{get:n[t],enumerable:!0})},M=(i,n,t,r)=>{if(n&&typeof n=="object"||typeof n=="function")for(let a of z(n))!R.call(i,a)&&(t||a!=="default")&&b(i,a,{get:()=>n[a],enumerable:!(r=H(n,a))||r.enumerable});return i};var j=(i=>(n,t)=>i&&i.get(n)||(t=M(V({}),n,1),i&&i.set(n,t),t))(typeof WeakMap!="undefined"?new WeakMap:0);var B={};J(B,{default:()=>L});var e=require("@raycast/api"),f=require("react");var d=require("@raycast/api");function P({onExit:i=()=>{}}){let{pop:n}=(0,d.useNavigation)();return _jsx(d.Detail,{navigationTitle:"Clear All Display Presets",actions:_jsx(d.ActionPanel,null,_jsx(d.ActionPanelItem,{title:"Confirm",onAction:()=>(0,d.clearLocalStorage)().then(()=>{n(),i()})})),markdown:`
  # \u{1F6A8} Are you sure?
  This cannot be undone.
  `})}var y=require("@raycast/api");function S({onExit:i=()=>{}}){let{pop:n}=(0,y.useNavigation)();return _jsx(y.Detail,{navigationTitle:"DisplayPlacer Help",actions:_jsx(y.ActionPanel,null,_jsx(y.ActionPanelItem,{title:"Back",onAction:n})),markdown:`
# \u{1F5A5}\uFE0F  DisplayPlacer Extension Help
Welcome! Thanks for checking out this extension. The primary purpose of this utility is to help you quickly switch between various screen resolutions. Some common cases for this include:
- Switching display settings when a laptop is connected to external displays.
- If you typically work on a high-resolution display you can quickly switch to a lower resolution to share you screen in a virtual meeting to allow others to see your screen easier.
- Set your screen to a specific resolution before recording a screencast.
- And of course, to see it all back to normal when you're done with any of the above!

## How to use this extension
1. Set your display to the desired resolution, rotation, refresh rate, etc. using standard MacOS System Preferences
2. Open this extension and select the "New Display Preset" option, or press \u2318+N
3. Give your preset a name and optional subtitle, then save.
4. To switch between your presets, select them within the exetnsion, or set a hotkey for the preset number in Raycast preferences.
The blue dot \u{1F535} icon indicates that your display settings match the indicated preset. The preset numbers are displayed on the right of each preset.

NOTE: On rare occasions, the screen ID of your displays may change. You can re-save your presets by selecting them and choosing to *Edit Display Preset* from the actions menu.

  `})}var c=require("@raycast/api"),v=require("child_process"),T=require("react");function k({onRefresh:i=()=>{}}){let[n,t]=(0,T.useState)(!1);return _jsx(c.Detail,{actions:_jsx(c.ActionPanel,null,!n&&_jsx(c.ActionPanelItem,{title:"Install with Homebrew",onAction:async()=>{if(n)return;t(!0);let r=new c.Toast({style:c.ToastStyle.Animated,title:"Installing..."});await r.show();try{(0,v.execSync)("zsh -l -c 'brew tap jakehilborn/jakehilborn && brew install displayplacer'"),await r.hide(),i()}catch{await r.hide(),await(0,c.showToast)(c.ToastStyle.Failure,"Error","An unknown error occured while trying to install")}t(!1)}})),markdown:`
# \u{1F6A8} Error: Displayplacer Utility is not installed
This extension depends on a command-line utilty that is not detected on your system. You must install it continue.

If you have homebrew installed, simply press **\u23CE** to have this extension install it for you.

To install homebrew, visit [this link](https://brew.sh)

Or, to install displayplacer manually, [click here](https://github.com/jakehilborn/displayplacer).
  `})}var A=require("child_process");function D(){return(0,A.execSync)("zsh -l -c 'displayplacer list'").toString().split(`
`).reduce((t,r)=>{let a=r.split(": "),s=a[1],u=t.screens.findIndex(m=>m.persistentId===t.currentId);switch(a[0]){case"Persistent screen id":{t.currentId=s,t.screens.push({persistentId:s,resolutions:[]});break}case"Contextual screen id":{t.screens[u].contextualId=s;break}case"Type":{t.screens[u].type=s;break}case"Resolution":{t.screens[u].resolution=s;break}case"Hertz":{t.screens[u].hertz=s;break}case"Color Depth":{t.screens[u].colorDepth=s;break}case"Scaling:on":{t.screens[u].scaling="on";break}case"Origin":{let m=s.split(" - ");t.screens[u].origin=m[0],m[1]&&(t.screens[u].mainDisplay=!0);break}case"Rotation":{let m=s.split(" - ");t.screens[u].rotation=m[0];break}}let g=a[0].match(/ {2}mode (\d+)/);if(g?.length){let m=!1;s.search(/ <-- current mode/)>=0&&(m=!0,s.replace(" <-- current mode","")),t.screens[u].resolutions.push({current:m,mode:parseInt(g[1]),res:s.match(/res:(\d+x\d+)/)?.[1],colorDepth:s.match(/color_depth:(\d+)/)?.[1],scaling:s.match(/scaling:(.+)/)?.[1],hz:s.match(/hz:(\d+)/)?.[1]})}return r.startsWith("displayplacer ")&&(t.currentCommand=r),t},{screens:[],currentCommand:null})}function N(i){if(!!i.command)try{(0,A.execSync)(`zsh -l -c '${i.command}'`)}catch(n){let t=!0;if(n.toString().split(`
`).forEach(a=>{console.log(a),a.search(/skipping changes for that screen/)&&(t=!1)}),t)throw new Error("Unknown")}}function L(){let{push:i,pop:n}=(0,e.useNavigation)(),[t,r]=(0,f.useState)([]),[a,s]=(0,f.useState)(!0),[u,g]=(0,f.useState)(null),[m,I]=(0,f.useState)(!1);async function h(){let o=await(0,e.getLocalStorageItem)("favorites");o?r(JSON.parse(o.toString())):(r([]),await(0,e.setLocalStorageItem)("favorites","[]"));try{let l=await D();if(!l.currentCommand)throw console.error("problem"),new Error("Could not get current command");g(l.currentCommand)}catch(l){console.error(l),I(!0)}s(!1)}(0,f.useEffect)(()=>{h()},[]);async function x(){let o=await D();return o.currentCommand?o.currentCommand:((0,e.showToast)(e.ToastStyle.Failure,"Could not get current display settings"),null)}function C(){i(_jsx(e.Form,{navigationTitle:"New DisplayPlacer Preset",actions:_jsx(e.ActionPanel,null,_jsx(e.SubmitFormAction,{title:"New Preset",icon:e.Icon.Plus,onSubmit:async o=>{let l=await x();!l||(t.push({id:(0,e.randomId)(),name:o.name,subtitle:o.subtitle??"",command:l}),r(t),(0,e.setLocalStorageItem)("favorites",JSON.stringify(t)),h().then(n))}}))},_jsx(e.FormTextField,{title:"Preset Name",key:"name",id:"name"}),_jsx(e.FormTextField,{title:"Subtitle",placeholder:"Short description shown next to title",defaultValue:"",key:"subtitle",id:"subtitle"})))}function F(o){i(_jsx(e.Form,{navigationTitle:"Edit DisplayPlacer Preset",actions:_jsx(e.ActionPanel,null,_jsx(e.SubmitFormAction,{title:"Save Changes",icon:e.Icon.Document,onSubmit:async l=>{let p=await x();if(!p)return;let w=t.findIndex(O=>O.id===o.id);t[w]={...t[w],name:l.name,subtitle:l.subtitle??"",command:l.overwrite?p:t[w].command},r(t),(0,e.setLocalStorageItem)("favorites",JSON.stringify(t)),h().then(n)}}))},_jsx(e.FormTextField,{title:"Preset Name",key:"name",id:"name",defaultValue:o.name}),_jsx(e.FormTextField,{title:"Subtitle",placeholder:"Short description shown next to title",defaultValue:o.subtitle,key:"subtitle",id:"subtitle"}),_jsx(e.FormCheckbox,{label:"Overwrite saved display settings with current display settings",id:"overwrite"})))}let E=_jsx(e.ActionPanelItem,{title:"New Display Preset",icon:e.Icon.Plus,shortcut:{key:"n",modifiers:["cmd"]},onAction:C});return m?_jsx(k,{onRefresh:()=>{s(!0),I(!1),h()}}):_jsx(e.List,{isLoading:a,searchBarPlaceholder:"Filter Presets"},a||_jsx(_jsxFragment,null,_jsx(e.List.Section,{title:"Presets"},t?.map((o,l)=>_jsx(e.ListItem,{title:o.name,key:l,subtitle:o.subtitle,accessoryTitle:`# ${(l+1).toString()}`,icon:u===o.command?{source:e.Icon.Dot,tintColor:e.Color.Blue}:"",actions:_jsx(e.ActionPanel,null,_jsx(e.ActionPanelItem,{title:"Load Display Preset",icon:e.Icon.Desktop,onAction:async()=>{let p=new e.Toast({style:e.ToastStyle.Animated,title:"Switching Display Settings..."});await p.show();try{N(o),await h(),await p.hide(),await(0,e.showHUD)("Display Preset Loaded")}catch{await h(),await p.hide(),(0,e.showToast)(e.ToastStyle.Failure,"Error","An unknown error occured while switching to this preset")}}}),_jsx(e.ActionPanelItem,{title:"Edit Display Preset",icon:e.Icon.Pencil,shortcut:{key:"e",modifiers:["cmd"]},onAction:()=>F(o)}),_jsx(e.ActionPanelItem,{title:"Delete Display Preset",icon:e.Icon.Trash,shortcut:{key:"delete",modifiers:["cmd"]},onAction:()=>{let p=t.findIndex(w=>w.id===o.id);t.splice(p,1),r(t),(0,e.setLocalStorageItem)("favorites",JSON.stringify(t)),h()}}),E)}))),_jsx(e.List.Section,{title:"Config"},_jsx(e.ListItem,{title:"New Display Preset",subtitle:"using current display settings",icon:e.Icon.Plus,actions:_jsx(e.ActionPanel,null,_jsx(e.ActionPanelItem,{title:"New Display Preset",onAction:C,icon:e.Icon.Plus,shortcut:{key:"n",modifiers:["cmd"]}}),_jsx(e.PushAction,{title:"Clear All Presets",target:_jsx(P,{onExit:()=>h()})}))}),_jsx(e.ListItem,{title:"Help",icon:e.Icon.QuestionMark,actions:_jsx(e.ActionPanel,null,_jsx(e.PushAction,{icon:e.Icon.QuestionMark,title:"Open Readme",target:_jsx(S,null)}))}))))}module.exports=j(B);0&&(module.exports={});
